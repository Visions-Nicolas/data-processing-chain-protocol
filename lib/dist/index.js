"use strict";var se=Object.create;var O=Object.defineProperty,de=Object.defineProperties,ce=Object.getOwnPropertyDescriptor,le=Object.getOwnPropertyDescriptors,pe=Object.getOwnPropertyNames,Y=Object.getOwnPropertySymbols,ge=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty,ue=Object.prototype.propertyIsEnumerable;var z=(d,e,t)=>e in d?O(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t,v=(d,e)=>{for(var t in e||(e={}))V.call(e,t)&&z(d,t,e[t]);if(Y)for(var t of Y(e))ue.call(e,t)&&z(d,t,e[t]);return d},w=(d,e)=>de(d,le(e));var he=(d,e)=>{for(var t in e)O(d,t,{get:e[t],enumerable:!0})},X=(d,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of pe(e))!V.call(d,i)&&i!==t&&O(d,i,{get:()=>e[i],enumerable:!(o=ce(e,i))||o.enumerable});return d};var J=(d,e,t)=>(t=d!=null?se(ge(d)):{},X(e||!d||!d.__esModule?O(t,"default",{value:d,enumerable:!0}):t,d)),fe=d=>X(O({},"__esModule",{value:!0}),d);var l=(d,e,t)=>new Promise((o,i)=>{var r=s=>{try{c(t.next(s))}catch(p){i(p)}},a=s=>{try{c(t.throw(s))}catch(p){i(p)}},c=s=>s.done?o(s.value):Promise.resolve(s.value).then(r,a);c((t=t.apply(d,e)).next())});var we={};he(we,{ChainStatus:()=>h,ChainType:()=>b,DataType:()=>M,Ext:()=>j,NodeSignal:()=>u,NodeSupervisor:()=>S,NodeType:()=>P,PipelineProcessor:()=>T});module.exports=fe(we);var I=require("fs"),K=require("path"),R=require("util");var x={reset:"\x1B[0m",info:"\x1B[32m",warn:"\x1B[93m",error:"\x1B[31m",header:"\x1B[36m",debug:"\x1B[90m",event:"\x1B[35m",special:"\x1B[37m"},n=class{static configure(e){this.config=v(v({},this.config),e)}static formatMessage(e,t){let o=new Date,i=o.getFullYear(),r=String(o.getMonth()+1).padStart(2,"0"),a=String(o.getDate()).padStart(2,"0"),c=String(o.getHours()).padStart(2,"0"),s=String(o.getMinutes()).padStart(2,"0"),p=String(o.getSeconds()).padStart(2,"0"),g=`${i}-${r}-${a}:${c}.${s}.${p}`;return e==="special"?`${x.reset}${x.special}${g} [${e.toUpperCase()}]: \x1B[31m[${t}\x1B[31m]${x.reset}
`:`${x.reset}${x[e]}${g} [${e.toUpperCase()}]: ${t}${x.reset}
`}static log(e,t){let o=new Date().toISOString(),i=this.formatMessage(e,t);this.noPrint||process.stdout.write(i),this.config.preserveLogs&&this.config.externalCallback&&this.config.externalCallback(e,t,o)}static special(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("special",t)}static event(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("event",t)}static debug(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("debug",t)}static info(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("info",t)}static warn(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("warn",t)}static error(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("error",t)}static header(e){let t=typeof e=="string"?e:(0,R.format)(e);this.log("header",t)}};n.noPrint=!1,n.config={preserveLogs:!1};var Z=(0,K.join)(process.cwd(),"logs"),W,Ce=()=>`dpcp-${new Date().toISOString().replace(/[:.]/g,"-")}.log`,me=()=>{try{(0,I.mkdirSync)(Z,{recursive:!0});let d=(0,K.join)(Z,Ce());return W=(0,I.createWriteStream)(d,{flags:"a"}),!0}catch(d){return process.stderr.write(`Failed to create log directory: ${d}
`),!1}},Se=(d,e,t)=>{if(!W&&!me())return;let o=`${t} [LOGGER][${d.toUpperCase()}]: ${e}
`;W.write(o)};n.configure({preserveLogs:!0,externalCallback:Se});var E;(r=>(r.SERVICE_CALLBACK=a=>{n.warn("REMOTE_SERVICE_CALLBACK not set")},r.SETUP_CALLBACK=a=>l(void 0,null,function*(){n.warn("SETUP_CALLBACK not set")}),r.REPORTING_CALLBACK=a=>l(void 0,null,function*(){n.warn("REPORTING_CALLBACK not set")}),r.BROADCAST_REPORTING_CALLBACK=a=>l(void 0,null,function*(){n.warn("BROADCAST_REPORTING_CALLBACK not set")}),r.NODE_STATUS_CALLBACK=a=>l(void 0,null,function*(){n.warn("NODE_STATUS_CALLBACK not set")})))(E||(E={}));var P;(t=>(t.LOCAL="local",t.REMOTE="remote"))(P||(P={}));var M;(t=>(t.RAW="raw",t.COMPRESSED="compressed"))(M||(M={}));var b;(o=>(o.DEFAULT=1,o.PERSISTANT=2,o.AUTO_DELETE=4))(b||(b={}));var h;(m=>(m.CHAIN_NOTIFIED="chain_notified",m.CHAIN_DEPLOYED="chain_deployed",m.CHAIN_SETUP_COMPLETED="chain_setup_completed",m.NODE_PENDING="node_pending",m.NODE_IN_PROGRESS="node_in_progress",m.NODE_COMPLETED="node_completed",m.NODE_FAILED="node_failed",m.NODE_SETUP_COMPLETED="node_setup_completed",m.CHILD_CHAIN_STARTED="child_chain_started",m.CHILD_CHAIN_COMPLETED="child_chain_completed",m.NODE_PENDING_DELETION="node_pending_deletion",m.NODE_END_OF_PIPELINE="node_end_of_pipeline",m.NODE_SUSPENDED="node_suspended",m.NODE_RESUMED="node_resumed"))(h||(h={}));var u;(C=>(C.NODE_SETUP="node_setup",C.NODE_CREATE="node_create",C.NODE_DELETE="node_delete",C.NODE_RUN="node_run",C.NODE_SEND_DATA="node_send_data",C.NODE_ERROR="node_error",C.NODE_RESUME="node_resume",C.NODE_STOP="node_stop",C.NODE_SUSPEND="node_suspend",C.CHAIN_PREPARE="chain_prepare",C.CHAIN_START="chain_start",C.CHAIN_START_PENDING_OCCURRENCE="chain_start_pending_occurrence",C.CHAIN_DEPLOY="chain_deploy"))(u||(u={}));var oe=require("timers"),ne=require("crypto");var ee=J(require("events")),te=require("crypto"),D=class extends ee.default{constructor(){super(),this.uid=(0,te.randomUUID)()}};var $=class $ extends D{constructor(){super();this.status=[];if(!($.authorizedAgent instanceof D))throw new Error("Node Reporter needs to be instantiated by an authorized Agent");$.authorizedAgent=null}static authorize(t){$.authorizedAgent=t}notify(t,o="local-signal"){let{status:i}=t;n.info(`Status ${i} from ${this.uid}`),this.status.push(i),this.emit(o,t)}getSignals(){return this.status}};$.authorizedAgent=null;var A=$;var L=class extends A{constructor(t,o){super();this.chainId=t;this.nodeId=o}},N=class d extends D{constructor(){super(),this.workflow={},this.remoteMonitoringHost=new Map,this.reportingCallback=E.REPORTING_CALLBACK,this.broadcastReportingCallback=E.BROADCAST_REPORTING_CALLBACK}getWorkflow(){return this.workflow}static retrieveService(e=!1){if(!d.instance||e){let t=new d;d.instance=t}return d.instance}setReportingCallback(e){this.reportingCallback=e}setBroadcastReportingCallback(e){this.broadcastReportingCallback=e}getRemoteMonitoringHost(e){return this.remoteMonitoringHost.get(e)}setRemoteMonitoringHost(e,t){this.remoteMonitoringHost.set(e,t)}genReportingAgent(e){let{chainId:t,nodeId:o,index:i}=e;L.authorize(this);let r=new L(t,o);return r.on("global-signal",a=>l(this,null,function*(){n.event(`Receive global-signal:
				${JSON.stringify(a)}
				for node ${o}
`);let c=w(v({},e),{signal:a});i>0?(a.broadcasted=!0,this.broadcastReportingCallback(c)):yield this.reportingCallback(c)})),r.on("local-signal",a=>l(this,null,function*(){n.event(`Receive local-signal:
				${JSON.stringify(a)}
				for node ${o} in chain ${t}
`);let c=w(v({},e),{signal:a}),s={[c.nodeId]:{[c.signal.status]:!0}};this.workflow[c.chainId]||(this.workflow[c.chainId]={});let p=this.workflow[c.chainId].status||{},g=v(v({},p),s);this.workflow[c.chainId].status=g,o==="supervisor"&&(yield this.reportingCallback(c))})),r}getChainStatus(e){var t;return(t=this.workflow[e])==null?void 0:t.status}setChainSetupCount(e,t){this.workflow[e]||(this.workflow[e]={}),this.workflow[e].setupCount=t}getChainSetupCount(e){var t;return(t=this.workflow[e])==null?void 0:t.setupCount}setChainDeployed(e){this.workflow[e]||(this.workflow[e]={}),this.workflow[e].deployed=!0}getChainDeployed(e){var t;return(t=this.workflow[e])==null?void 0:t.deployed}setChainSetupCompleted(e){this.workflow[e]||(this.workflow[e]={}),this.workflow[e].setupCompleted=!0}getChainSetupCompleted(e){var t;return(t=this.workflow[e])==null?void 0:t.setupCompleted}};var H=class{constructor(e){this.node=e;this.signalQueue=[];this.currentCursor=0;this.status=[];this.suspendedState=null}handleStopSignal(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing STOP signal")})}handleSuspendSignal(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing Suspend signal"),this.status.includes(h.NODE_SUSPENDED)||(this.status.push(h.NODE_SUSPENDED),n.info(`Node ${this.node.getId()} suspended.`))})}handleResumeSignal(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing RESUME signal");let e=this.status.indexOf(h.NODE_SUSPENDED);if(e>-1){if(this.status.splice(e,1),!this.suspendedState){n.warn(`~ NodeStatusManager: Node ${this.node.getId()} may have resumed prematurely.`);return}return n.info(`~ NodeStatusManager: Resuming node ${this.node.getId()}...`),this.node.execute(this.suspendedState.data)}else n.warn(`~ NodeStatusManager: Cannot resume Node ${this.node.getId()}, not in suspended state.`)})}suspendExecution(e,t,o){this.suspendedState={generator:e,currentBatch:t,data:o}}getSuspendedState(){return this.suspendedState}clearSuspendedState(){this.suspendedState=null}isSuspended(){return this.status.includes(h.NODE_SUSPENDED)}handleErrorSignal(){return l(this,null,function*(){n.error("~ NodeStatusManager: Processing ERROR signal")})}handleNodeSetup(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing NODE_SETUP signal")})}handleNodeCreate(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing NODE_CREATE signal")})}handleNodeDelete(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing NODE_DELETE signal")})}handleNodeRun(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing NODE_RUN signal")})}handleNodeSendData(){return l(this,null,function*(){n.info("~ NodeStatusManager: Processing NODE_SEND_DATA signal")})}updateQueue(e){this.signalQueue=e,this.currentCursor=0}enqueueSignals(e){return l(this,null,function*(){this.signalQueue.push(...e),e.length>0&&e[0]===u.NODE_RESUME&&(yield this.process())})}processNextSignal(){return l(this,null,function*(){try{let e=this.signalQueue[this.currentCursor];switch(e){case u.NODE_STOP:return this.handleStopSignal();case u.NODE_SUSPEND:return this.handleSuspendSignal();case u.NODE_RESUME:return this.handleResumeSignal();case u.NODE_ERROR:return this.handleErrorSignal();case u.NODE_SETUP:return this.handleNodeSetup();case u.NODE_CREATE:return this.handleNodeCreate();case u.NODE_DELETE:return this.handleNodeDelete();case u.NODE_RUN:return this.handleNodeRun();case u.NODE_SEND_DATA:return this.handleNodeSendData();default:n.warn(`~ NodeStatusManager: Unknown signal type: ${e}`)}}catch(e){throw n.error(`~ NodeStatusManager: Error processing signal: ${e.message}`),e}})}getQueueState(){return{queue:[...this.signalQueue],cursor:this.currentCursor}}process(){return l(this,null,function*(){for(;this.currentCursor<this.signalQueue.length;this.currentCursor++)yield this.processNextSignal();return this.status})}};var U=class d{constructor(e=[]){this.reporting=null;this.id=(0,ne.randomUUID)(),this.output=[],this.pipelines=[],this.dependencies=e,this.status=h.NODE_PENDING,this.progress=0,this.dataType=M.RAW,this.executionQueue=Promise.resolve(),this.nextNodeInfo=null,this.config=null,this.statusManager=new H(this)}updateProgress(){this.progress+=1/this.pipelines.length}setConfig(e){let{chainId:t,index:o,count:i}=e;if(o!==void 0&&i!==void 0){let r=N.retrieveService();this.reporting=r.genReportingAgent({chainId:t,nodeId:this.id,index:o,count:i})}else n.warn("Node index is not defined, configuration failed");this.config=e,e.signalQueue&&(n.info(`Node ${this.id} enqueuing signals...`),n.debug(`${e.signalQueue}`),this.statusManager.enqueueSignals(e.signalQueue))}enqueueSignals(e){return l(this,null,function*(){yield this.statusManager.enqueueSignals(e)})}getExecutionQueue(){return this.executionQueue}getConfig(){return this.config}getId(){return this.id}addPipeline(e){this.pipelines.push(e)}processPipeline(e,t){return l(this,null,function*(){let o=t;for(let i of e)o=yield i.digest(o);return o})}*getPipelineGenerator(e,t){for(let o=0;o<e.length;o+=t)yield e.slice(o,o+t)}notify(e,t="local-signal"){try{if(this.reporting!==null)typeof e=="object"&&"status"in e?this.reporting.notify(e,t):this.reporting.notify({status:e},t);else throw new Error("Reporter not set")}catch(o){n.error(o.message)}}processChildChain(e){return l(this,null,function*(){var o;let t=(o=this.config)==null?void 0:o.chainConfig;if(t&&Array.isArray(t)&&t.length>0&&(t[0].rootConfig=this.config?JSON.parse(JSON.stringify(this.config)):void 0,!(yield S.retrieveService().handleRequest({signal:u.CHAIN_DEPLOY,config:t,data:e}))))throw new Error("Failed to deploy chain: no chainId returned")})}execute(e){return l(this,null,function*(){var a,c;let t=((c=(a=this.config)==null?void 0:a.rootConfig)==null?void 0:c.childMode)==="parallel"?"in parallel":"in serial",o=this.statusManager.getSuspendedState(),i=!!o;n.info(`Node ${this.id} execution ${i?"resumed":"started"} ${t}...`),this.executionQueue=this.executionQueue.then(()=>l(this,null,function*(){var s;try{this.updateStatus(h.NODE_IN_PROGRESS);let p,g=e;i&&o?(p=o.generator,g=o.data,yield this.processBatch(o.currentBatch,g)):p=this.getPipelineGenerator(this.pipelines,3);let f=p.next();for(;!f.done;){if((yield this.statusManager.process()).includes(h.NODE_SUSPENDED)){this.statusManager.suspendExecution(p,f.value,g);return}yield this.processBatch(f.value,g),f=p.next()}this.statusManager.clearSuspendedState(),this.updateStatus(h.NODE_COMPLETED),(s=this.config)!=null&&s.chainConfig&&(n.info(`child chain found in node: ${this.id}`),yield this.processChildChain(g))}catch(p){this.statusManager.isSuspended()||(this.statusManager.clearSuspendedState(),this.updateStatus(h.NODE_FAILED,p),n.error(`Node ${this.id} execution failed: ${p}`))}})),yield S.retrieveService().handleRequest({signal:u.NODE_SEND_DATA,id:this.id})})}processBatch(e,t){return l(this,null,function*(){return new Promise((o,i)=>{(0,oe.setImmediate)(()=>l(this,null,function*(){try{let r=e.map(a=>this.processPipeline(a,t).then(c=>{this.output.push(c),this.updateProgress()}));yield Promise.all(r),o()}catch(r){i(r)}}))})})}sendData(){return l(this,null,function*(){yield this.executionQueue,n.info(`Sending data from node ${this.id}.`),yield d.terminate(this.id,this.output)})}static terminate(e,t){return l(this,null,function*(){n.special(`Terminate: Node ${e} execution completed.`);let o=t[0];yield d.moveToNextNode(e,o)})}static moveToNextNode(e,t){return l(this,null,function*(){var p,g,f,y,C;let o=S.retrieveService(),r=o.getNodes().get(e),a=(p=r==null?void 0:r.getConfig())==null?void 0:p.chainId;if(!r){n.warn(`Node ${e} not found for moving to next node.`);return}let c=r.getNextNodeInfo();c?c.type===P.LOCAL?yield o.handleRequest({signal:u.NODE_RUN,id:c.id,data:t}):c.type===P.REMOTE&&o.remoteServiceCallback({chainId:a,targetId:c.id,data:t,meta:c.meta}):(n.special(`End of pipeline reached by node ${e} in chain ${a}.`),r.notify(h.NODE_END_OF_PIPELINE,"global-signal")),((f=(g=r.config)==null?void 0:g.chainType)!=null?f:0)&b.PERSISTANT?n.warn(`Node ${e} kept for future calls.`):((C=(y=r.config)==null?void 0:y.chainType)!=null?C:0)&b.AUTO_DELETE?yield o.handleRequest({id:e,signal:u.NODE_DELETE}):r.notify(h.NODE_PENDING_DELETION,"global-signal")})}getProgress(){return this.progress}canExecute(e){return this.dependencies.every(t=>e.has(t))}getDataType(){return this.dataType}getStatus(){return this.status}getDependencies(){return this.dependencies}updateStatus(e,t){this.status=e,e===h.NODE_FAILED&&(this.error=t),this.reporting&&this.reporting.notify({status:e})}getError(){return this.error}getProcessors(){return this.pipelines}setNextNodeInfo(e,t,o){this.nextNodeInfo={id:e,type:t,meta:o}}getNextNodeInfo(){return this.nextNodeInfo}};var T=class d{constructor(e){this.targetId=e.targetId,this.meta=e.meta}static setCallbackService(e){d.callbackService=e}digest(e){return l(this,null,function*(){return d.callbackService?(n.info(`[PipelineProcessor]: Digesting data using "${this.targetId}"`),yield d.callbackService({targetId:this.targetId,meta:this.meta,data:e})):{}})}};var ie=require("crypto");var B=class{constructor(){}logChains(e){n.debug("--Logging chains content:"),e.forEach((t,o)=>{n.debug(`Chain ID: ${o}`),n.debug(`Root Node ID: ${t.rootNodeId||"None"}`),n.debug(`Data Reference: ${JSON.stringify(t.dataRef,null,2)||"None"}`),n.debug("Chain Configuration:"),t.config.forEach((i,r)=>{n.debug(`  Node ${r+1}:`),n.debug(`    Services: ${JSON.stringify(i.services)}`),n.debug(`    Chain ID: ${i.chainId}`),n.debug(`    Index: ${i.index}`),n.debug(`    Count: ${i.count}`),n.debug(`    Location: ${i.location}`),n.debug(`    Next Target ID: ${i.nextTargetId}`),n.debug(`    Chain Type: ${i.chainType}`),n.debug(`    Monitoring Host: ${i.monitoringHost}`),n.debug(`    Child Mode: ${i.childMode}`)})})}logWorkflow(e){n.debug("--Logging chains content:"),Object.entries(e).forEach(([t,o])=>{n.header(`Workflow Node: ${t}`),Object.entries(o).forEach(([i,r])=>{n.debug(`- ${i}: ${JSON.stringify(r)}`)})})}};var S=class d{constructor(){this.uid="@supervisor:default",this.ctn="@container:default",this.nsLogger=new B,this.nodes=new Map,this.chains=new Map,this.childChains=new Map,this.remoteServiceCallback=E.SERVICE_CALLBACK,this.broadcastSetupCallback=E.SETUP_CALLBACK,this.nodeStatusCallback=E.NODE_STATUS_CALLBACK}static retrieveService(e=!1){if(!d.instance||e){let t=new d;d.instance=t}return d.instance}log(e){switch(e){case"chains":this.nsLogger.logChains(this.chains);break;case"monitoring-workflow":{let o=N.retrieveService().getWorkflow();this.nsLogger.logWorkflow(o);break}default:break}}getChain(e){return this.chains.get(e)}setNodeStatusCallback(e){this.nodeStatusCallback=e}setRemoteServiceCallback(e){this.remoteServiceCallback=e}setBroadcastSetupCallback(e){this.broadcastSetupCallback=e}setBroadcastReportingCallback(e){N.retrieveService().setBroadcastReportingCallback(e)}setMonitoringCallback(e){N.retrieveService().setReportingCallback(e)}setUid(e){this.ctn=`@container:${e}`,this.uid=`@supervisor:${e}`}enqueueSignals(e,t){return l(this,null,function*(){var o;return(o=this.nodes.get(e))==null?void 0:o.enqueueSignals(t)})}handleRequest(e){return l(this,null,function*(){switch(e.signal){case u.NODE_SETUP:return n.event("handle NODE_SETUP"),yield this.setupNode(e.config);case u.NODE_CREATE:return n.event("handle NODE_CREATE"),yield this.createNode(e.params);case u.NODE_DELETE:return n.event("handle NODE_DELETE"),yield this.deleteNode(e.id);case u.NODE_RUN:return n.event("handle NODE_RUN"),yield this.runNode(e.id,e.data);case u.NODE_SEND_DATA:return n.event("handle NODE_SEND_DATA"),yield this.sendNodeData(e.id);case u.CHAIN_PREPARE:return n.event("handle CHAIN_PREPARE"),yield this.prepareChainDistribution(e.id);case u.CHAIN_START:return n.event("handle CHAIN_START"),yield this.startChain(e.id,e.data);case u.CHAIN_START_PENDING_OCCURRENCE:return n.event("handle CHAIN_START_PENDING_OCCURRENCE"),yield this.startPendingChain(e.id);case u.CHAIN_DEPLOY:return n.event("handle CHAIN_DEPLOY"),yield this.deployChain(e.config,e.data);default:n.warn(`${this.ctn}: Unknown signal received: ${JSON.stringify(e,null,2)}`)}})}remoteReport(e,t){N.retrieveService().genReportingAgent({chainId:t,nodeId:"supervisor-remote",index:1,count:-1}).notify(e,"global-signal")}localReport(e,t){N.retrieveService().genReportingAgent({chainId:t,nodeId:"supervisor",index:-1,count:-1}).notify({status:e},"local-signal")}deployChain(e,t,o){return l(this,null,function*(){try{if(!e)throw new Error(`${this.ctn}: Chain configuration is required`);n.info(`${this.ctn}: Starting a new chain deployment...`);let i=this.createChain(e);yield this.prepareChainDistribution(i);let r=this.chains.get(i);if(r&&(r.dataRef=t),n.info(`${this.ctn}: Deployment for chain ${i} has successfully started...`),o){let a=this.childChains.get(o)||[];a.push(i),this.childChains.set(o,a)}return this.localReport(h.CHAIN_DEPLOYED,i),i}catch(i){throw n.error(`${this.ctn}{deployChain}: ${i.message}`),i}})}createNode(e){return l(this,null,function*(){let t=new U,o=t.getId();return t.setConfig(e),this.nodes.set(o,t),n.info(`${this.ctn}: Node ${o} created with config: ${JSON.stringify(e,null,2)}`),o})}setupNode(e,t=!1){return l(this,null,function*(){this.updateChain([e]);let o=yield this.createNode(e),i=this.nodes.get(o);if(!i)return n.warn(`${this.ctn}: Attempted to setup undefined node`),o;n.header(`Setup node ${i==null?void 0:i.getId()}...`),yield this.setRemoteMonitoringHost(e);let r=e.services.map(a=>new T(typeof a=="string"?{targetId:a}:a));return yield this.addProcessors(o,r),n.info(`${this.ctn}: Node ${o} setup completed with ${r.length} processors`),e.nextTargetId!==void 0?i.setNextNodeInfo(e.nextTargetId,P.REMOTE,e.nextMeta):t||n.warn(`${this.ctn}: Cannot set next node info: nextTargetId is undefined`),this.notify(o,h.NODE_SETUP_COMPLETED,"global-signal"),o})}handleNotification(e,t){try{let o=this.chains.get(e);if(!o){n.warn(`${this.ctn}: Chain with ID ${e} not found.`);return}let i=o.rootNodeId;if(!i){n.warn(`${this.ctn}: Root node ID missing for chain ${e}.`);return}let r=this.nodes.get(i);if(!r){n.warn(`${this.ctn}: Node with ID ${i} not found.`);return}n.info(`${this.ctn}:
		Sending notification to node ${i}
		with status ${JSON.stringify(t)}.`),r.notify(t,"global-signal")}catch(o){n.error(`${this.ctn}: Failed to handle notification for chain ${e}: ${o.message}`)}}notify(e,t,o="local-signal"){let i=this.nodes.get(e);i?i.notify(t,o):n.warn(`${this.ctn}: Can't notify non-existing node ${e}`)}addProcessors(e,t){return l(this,null,function*(){let o=this.nodes.get(e);o?(o.addPipeline(t),n.info(`${this.ctn}: Processors added to Node ${e}.`)):n.warn(`${this.ctn}: Node ${e} not found.`)})}deleteNode(e){return l(this,null,function*(){this.nodes.has(e)?(this.nodes.delete(e),n.info(`${this.ctn}: Node ${e} deleted.`)):n.warn(`${this.ctn}: Node ${e} not found.`)})}createChain(e){var t;try{if(!e||!Array.isArray(e))throw new Error("Invalid chain configuration: config must be an array");let o=Date.now(),i=`${this.uid}-${o}-${(0,ie.randomUUID)().slice(0,8)}`,r={config:e};this.chains.set(i,r);let a=e[0].rootConfig?e[0].rootConfig.monitoringHost:(t=e[0])==null?void 0:t.monitoringHost,c=Array.isArray(e)?e.length:0;return c>0?e.forEach((s,p)=>{s&&(s.index=p,s.count=c,s.monitoringHost=a)}):n.warn(`${this.ctn}: Chain configuration is empty`),n.header(`${this.ctn}:
	Chain ${i} creation has started...`),i}catch(o){throw n.header(`${this.ctn}{createChain}:
	${o.message}`),o}}updateChain(e){if(e.length===0||!e[0].chainId)throw new Error("Invalid chain configuration");let t=e[0].chainId,o=this.chains.get(t);return o?(o.config=o.config.concat(e),n.info(`${this.ctn}: Chain ${t} updated with ${e.length} new configurations`)):(o={config:e},this.chains.set(t,o),n.info(`${this.ctn}: Chain ${t} created with ${e.length} configurations`)),t}setRemoteMonitoringHost(e){return l(this,null,function*(){let t=e.monitoringHost;if(!t)throw new Error(`${this.ctn}: No Monitoring Host set for Chain ${e.chainId} during distribution`);N.retrieveService().setRemoteMonitoringHost(e.chainId,t)})}prepareChainDistribution(e){return l(this,null,function*(){try{n.header(`${this.ctn}:
	Chain distribution for ${e} in progress...`);let t=this.chains.get(e);if(!t)throw new Error(`${this.ctn}: Chain ${e} not found`);let o=t.config,i=o.filter(a=>a.location==="local"),r=o.filter(a=>a.location==="remote");if(i||n.warn("Local config undefined"),i.length>0){let a=yield this.setupNode(w(v({},i[0]),{chainId:e}),!0);t.rootNodeId=a;let c=a;for(let s=1;s<i.length;s++){let p=yield this.setupNode(w(v({},i[s]),{chainId:e}),!0),g=this.nodes.get(c);g&&g.setNextNodeInfo(p,P.LOCAL),c=p}if(r||n.warn("Remote config undefined"),r.length>0&&r[0].services.length>0){let s=this.nodes.get(c);if(s){let p=r[0].services[0];s.setNextNodeInfo(typeof p=="string"?p:p.targetId,P.REMOTE,typeof p=="string"?void 0:p.meta)}}}else n.warn(`${this.ctn}: No local config found for chain ${e}. Root node unavailable.`);try{if(r.length>0){let a=r.map((c,s)=>{var f;let p=(f=r[s+1])==null?void 0:f.services[0];return w(v({},c),{nextTargetId:p?typeof p=="string"?p:p.targetId:void 0,nextMeta:p&&typeof p!="string"?p.meta:void 0})});yield this.broadcastNodeSetupSignal(e,a)}}catch(a){n.error(`${this.ctn}{prepareChainDistribution, broadcast}: ${a.message}`)}}catch(t){throw n.error(`${this.ctn}{prepareChainDistribution}: ${t.message}`),t}})}broadcastNodeSetupSignal(e,t){return l(this,null,function*(){let o={signal:u.NODE_SETUP,chain:{id:e,config:t}};try{yield this.broadcastSetupCallback(o),n.info(`${this.ctn}: Node creation signal broadcasted with chainId: ${e} for remote configs`)}catch(i){n.error(`${this.ctn}: Failed to broadcast node creation signal: ${i}`)}})}startPendingChain(e){return l(this,null,function*(){var i,r,a;let t=this.chains.get(e),o=t==null?void 0:t.dataRef;if(o)if((i=t==null?void 0:t.config[0])==null?void 0:i.rootConfig){let s=t==null?void 0:t.rootNodeId;if(!s)throw n.error(`${this.ctn}: Root node ID for chain ${e} not found.`),new Error("Root node ID not found");(((a=(r=t==null?void 0:t.config[0])==null?void 0:r.rootConfig)==null?void 0:a.childMode)==="parallel"?"parallel":"serial")==="parallel"?(n.warn(`// Starting parallel child chain: ${e}`),this.notify(s,h.CHILD_CHAIN_STARTED,"global-signal"),this.startChain(e,o).then(()=>this.notify(s,h.CHILD_CHAIN_COMPLETED,"global-signal")).catch(g=>{n.error(`Failed to start parallel child chain: ${g}`)})):(n.warn(`__ Starting serial child chain: ${e}`),yield this.startChain(e,o),this.notify(s,h.CHILD_CHAIN_COMPLETED,"global-signal"))}else yield this.startChain(e,o);else n.warn(`${this.ctn}:
	Nothing to process on chain ${e}`)})}startChain(e,t){return l(this,null,function*(){n.header(`<<Start Chain>>: Chain ${e} requested...`),n.info(`Data: ${JSON.stringify(t,null,2)}`);let o=this.chains.get(e);if(!o){n.warn(`Chain ${e} not found.`);return}let i=o.rootNodeId;if(!i){n.error(`${this.ctn}: Root node ID for chain ${e} not found.`);return}if(!this.nodes.get(i)){n.error(`${this.ctn}: Root node ${i} for chain ${e} not found.`);return}try{yield this.runNode(i,t),n.info(`${this.ctn}: Chain ${e} started with root node ${i}.`)}catch(a){n.error(`${this.ctn}: Failed to start chain ${e}: ${a}`)}})}runNode(e,t){return l(this,null,function*(){let o=this.nodes.get(e);o?yield o.execute(t):n.warn(`${this.ctn}: Node ${e} not found.`)})}runNodeByRelation(e){return l(this,null,function*(){try{let{targetId:t,chainId:o,data:i}=e;if(n.info(`Received data for node hosting target ${t}`),o===void 0)throw new Error("chainId is undefined");if(t===void 0)throw new Error("targetId is undefined");let r=this.getNodesByServiceAndChain(t,o);if(!r||r.length===0)throw new Error(`No node found for targetId ${t} and chainId ${o}`);let a=r[0].getId();if(a===void 0)throw new Error(`No node ID exists for targetId ${t} and chainId ${o}`);yield this.handleRequest({signal:u.NODE_RUN,id:a,data:i})}catch(t){n.error(`Error in runNodeByRelation: ${t.message}`)}})}sendNodeData(e){return l(this,null,function*(){let t=this.nodes.get(e);if(t)try{yield t.sendData()}catch(o){let i=o;n.error(`${this.ctn}: Node ${e} send data failed: ${i.message}`)}else n.warn(`${this.ctn}: Node ${e} not found.`)})}getNodes(){return this.nodes}getNodesByServiceAndChain(e,t){return Array.from(this.nodes.values()).filter(o=>{let i=o.getConfig();return i?i.chainId===t&&i.services.some(r=>typeof r=="string"?r===e:r.targetId===e):!1})}};var k;(e=>{class d{static triggerPendingOccurrence(o){return l(this,null,function*(){let i=S.retrieveService(),r={signal:u.CHAIN_START_PENDING_OCCURRENCE,id:o};yield i.handleRequest(r),n.event("MonitoringSignalHandler: Start Pending Occurrence...")})}static handle(o){return l(this,null,function*(){var c;let i=N.retrieveService(),r=(c=o.signal)==null?void 0:c.status,a=o.chainId;switch(r){case h.NODE_SETUP_COMPLETED:{let s=i.getChainSetupCount(a);s?i.setChainSetupCount(a,s+1):i.setChainSetupCount(a,1),s=i.getChainSetupCount(a),s&&s>=o.count&&(i.setChainSetupCompleted(a),n.event("MonitoringSignalHandler: Chain Nodes setup completed"),i.getChainDeployed(a)&&(yield this.triggerPendingOccurrence(a)));break}case h.CHAIN_DEPLOYED:{i.setChainDeployed(a),n.event("MonitoringSignalHandler: Chain deployed"),i.getChainSetupCompleted(a)&&(yield this.triggerPendingOccurrence(a));break}case h.CHAIN_NOTIFIED:{let{signal:s,payload:p}=o.signal,g=S.retrieveService(),f={payload:p,chainId:a,signal:s!=null?s:u.NODE_ERROR,nodeId:"",index:0,count:0};g.nodeStatusCallback(f);break}default:n.event(`MonitoringSignalHandler:
		Signal handler not found for ${JSON.stringify(o.signal)}`);break}})}}e.MonitoringSignalHandler=d})(k||(k={}));var re=require("buffer"),Ne=J(require("http")),ve=J(require("https"));var _=(d,e)=>l(void 0,null,function*(){let t=d.protocol==="https:",o={hostname:d.hostname,port:d.port||(t?"443":"80"),path:d.pathname,method:"POST",headers:{"Content-Type":"application/json","Content-Length":re.Buffer.byteLength(e)}};return new Promise((i,r)=>{let a=(t?ve:Ne).request(o,c=>{let s="";c.on("data",p=>{s+=p}),c.on("end",()=>{c.statusCode&&c.statusCode>=200&&c.statusCode<300?i(s):r(new Error(`HTTP Error: ${c.statusCode} ${c.statusMessage} - URL: ${o.hostname}${o.path}`))})});a.on("error",c=>{r(new Error(`Request failed to ${d.href}: ${c.message}`))}),a.write(e),a.end()})});var G;(r=>{r.reportingCallback=a=>l(void 0,null,function*(){let{message:c,reportSignalHandler:s}=a;yield s(c)});let e=a=>l(void 0,null,function*(){yield k.MonitoringSignalHandler.handle(a)});r.defaultMonitoringResolver=a=>l(void 0,null,function*(){try{let s=N.retrieveService().getRemoteMonitoringHost(a);if(s!==void 0)return n.info({message:`DRC: Resolving host for monitoring: ${s}`}),s;throw new Error("Monitoring host not found, selected chain may not exist.")}catch(c){n.error({message:c.message})}});let o=a=>l(void 0,null,function*(){try{let{message:c,path:s,monitoringResolver:p}=a,g=yield p(c.chainId),f=new URL(s,g),y=JSON.stringify(c);n.info(`BroadcastReportingCallback: Sending message to ${f}`),yield _(f,y)}catch(c){n.error({message:c.message})}});r.setMonitoringCallbacks=a=>l(void 0,null,function*(){let{paths:c,reportSignalHandler:s,monitoringResolver:p}=a,g=S.retrieveService();g.setMonitoringCallback(f=>l(void 0,null,function*(){let y={message:f,reportSignalHandler:s!=null?s:e};yield(0,r.reportingCallback)(y)})),s?n.info("Monitoring Callback set with custom Signal Handler"):n.info("Monitoring Callback set with default Signal Handler"),g.setBroadcastReportingCallback(f=>l(void 0,null,function*(){let y={message:f,path:c.notify,monitoringResolver:p!=null?p:r.defaultMonitoringResolver};yield o(y)})),p?n.info("Broadcast Reporting Callback set with custom Resolver"):n.info("Broadcast Reporting Callback set with default Resolver")})})(G||(G={}));var q;(o=>(o.broadcastSetupCallback=i=>l(void 0,null,function*(){let{message:r,hostResolver:a,path:c}=i;n.info(`Broadcast message: ${JSON.stringify(r,null,2)}`);let s=r.chain.config,p=r.chain.id;for(let g of s){if(g.services.length===0){n.warn("Empty services array encountered in config");continue}let f=g.services[0],y=typeof f=="string"?f:f.targetId,C=typeof f=="string"?void 0:f.meta,m=a(y,C);if(!m){n.warn(`No container address found for targetId: ${y}`);continue}try{let Q=JSON.stringify({chainId:p,remoteConfigs:g}),ae=new URL(c,m);_(ae,Q)}catch(Q){n.error(`Unexpected error sending setup request to ${m} for targetId ${y}: ${Q.message}`)}}}),o.remoteServiceCallback=i=>l(void 0,null,function*(){let{cbPayload:r,hostResolver:a,path:c}=i;n.info(`Service callback payload: ${JSON.stringify(i,null,2)}`);try{if(!r.chainId)throw new Error("payload.chainId is undefined");let s=a(r.targetId,r.meta);if(!s)throw new Error(`Next connector URI not found for the following target service: ${r.targetId}`);let p=new URL(c,s);n.info(`Sending data to next connector on: ${p.href}`);let g=JSON.stringify(r);yield _(p,g)}catch(s){throw n.error(`Error sending data to next connector: ${s.message}`),s}}),o.setResolverCallbacks=i=>l(void 0,null,function*(){let{paths:r,hostResolver:a}=i,c=S.retrieveService();c.setBroadcastSetupCallback(s=>l(void 0,null,function*(){let p={message:s,hostResolver:a,path:r.setup};yield(0,o.broadcastSetupCallback)(p)})),c.setRemoteServiceCallback(s=>l(void 0,null,function*(){let p={cbPayload:s,hostResolver:a,path:r.run};yield(0,o.remoteServiceCallback)(p)}))})))(q||(q={}));var F;(o=>{o.defaultHostResolver=i=>l(void 0,null,function*(){var r;try{let a=(r=i.payload)==null?void 0:r.hostURI;if(a)return a;throw new Error("host URI not set")}catch(a){n.error(`${a.message}`)}});let e=i=>l(void 0,null,function*(){try{let{message:r,path:a,hostResolver:c}=i,s=yield c(r),p=new URL(a,s),g=JSON.stringify(r);n.info(`NodeStatusCallback: Sending message to ${p}`),yield _(p,g)}catch(r){n.error(`${r.message}`)}});o.setNodeStatusResolverCallbacks=i=>l(void 0,null,function*(){let{paths:r,hostResolver:a}=i;S.retrieveService().setNodeStatusCallback(s=>l(void 0,null,function*(){let p={message:s,hostResolver:a!=null?a:o.defaultHostResolver,path:r.enqueue};yield e(p)}))})})(F||(F={}));var j;(i=>(i.Monitoring=k,i.Reporting=G,i.Resolver=q,i.NodeStatus=F))(j||(j={}));0&&(module.exports={ChainStatus,ChainType,DataType,Ext,NodeSignal,NodeSupervisor,NodeType,PipelineProcessor});
//# sourceMappingURL=index.js.map